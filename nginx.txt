Steps to Set Up Nginx
1. Install Nginx (if not already installed):
bash
Copy code
sudo apt install nginx
2. Configure Nginx for your Django project:
Create a new configuration file for your site (e.g., amadesa.com):

bash
Copy code
sudo nano /etc/nginx/sites-available/amadesa.com
Add the following configuration inside the file:

nginx
Copy code
server {
    listen 80;
    server_name amadesa.com www.amadesa.com 54.226.195.254;

    location / {
        proxy_pass http://127.0.0.1:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /static/ {
        alias /home/ubuntu/storefront/staticfiles/;
    }

    location /media/ {
        alias /home/ubuntu/storefront/media/;
    }
}


3. Enable the Nginx configuration:
Create a symlink to enable your configuration:

bash
Copy code
sudo ln -s /etc/nginx/sites-available/amadesa.com /etc/nginx/sites-enabled/
4. Test the Nginx configuration for syntax errors:
bash
Copy code
sudo nginx -t
If everything looks good, you will see an output like this:

bash

nginx: configuration file /etc/nginx/nginx.conf test is successful
5. Restart Nginx to apply the changes:
bash

sudo systemctl restart nginx
6. Run Gunicorn as a Background Service
Since running Gunicorn from the command line will block the terminal, we will use systemd to run Gunicorn as a service:

Create a systemd service file for Gunicorn:

bash
Copy code
sudo nano /etc/systemd/system/gunicorn.service
Add the following content:

ini
Copy code
[Unit]
Description=gunicorn daemon for Django project
After=network.target

[Service]
User=ubuntu
Group=www-data
WorkingDirectory=/home/ubuntu/storefront
ExecStart=/home/ubuntu/storefront/env/bin/gunicorn --workers 3 --bind unix:/home/ubuntu/storefront/storefront.sock storefront.wsgi:application

[Install]
WantedBy=multi-user.target
Start and enable the Gunicorn service:

bash
Copy code
sudo systemctl start gunicorn
sudo systemctl enable gunicorn
Now, Nginx will forward all requests to Gunicorn, which will handle running the Django application. You can access your site by visiting http://amadesa.com.